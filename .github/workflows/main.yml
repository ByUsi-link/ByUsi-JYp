name: Deploy Flask App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python on Ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://www.python.org/ftp/python/3.10.6/Python-3.10.6.tgz
          tar -xvf Python-3.10.6.tgz
          cd Python-3.10.6
          ./configure --enable-optimizations
          make
          sudo make altinstall
          python3.10 --version
        if: runner.os == 'Linux'
        
      - name: Set up Python on Windows
        run: |
          $url = "https://www.python.org/ftp/python/3.10.6/python-3.10.6-amd64.exe"
          $output = "python-3.10.6-amd64.exe"
          Invoke-WebRequest -Uri $url -OutFile $output
          Start-Process -FilePath $output -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1" -Wait
          python --version
        if: runner.os == 'Windows'

      - name: Install dependencies (Linux)
        run: |
          python3.10 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install flask gunicorn pyinstaller
        if: runner.os == 'Linux'
        
      - name: Install dependencies (Windows)
        run: |
          python -m venv venv
          venv\Scripts\activate
          pip install --upgrade pip
          pip install flask gunicorn pyinstaller
        if: runner.os == 'Windows'

      - name: Build executable (Linux)
        run: |
          source venv/bin/activate
          pyinstaller --onefile --name flask_app ai_model.py
        if: runner.os == 'Linux'

      - name: Build executable (Windows)
        run: |
          venv\Scripts\activate
          pyinstaller --onefile --name flask_app ai_model.py
        if: runner.os == 'Windows'

      - name: Archive Artifacts (Linux)
        uses: actions/upload-artifact@v2
        with:
          name: flask_app_linux
          path: dist/flask_app
        if: runner.os == 'Linux'

      - name: Archive Artifacts (Windows)
        uses: actions/upload-artifact@v2
        with:
          name: flask_app_windows
          path: dist/flask_app.exe
        if: runner.os == 'Windows'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0  # 你可以使用其他版本号
          release_name: Release v1.0.0
          draft: false
          prerelease: false

      - name: Upload Release Asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/flask_app
          asset_name: flask_app_linux
          asset_content_type: application/octet-stream
        if: runner.os == 'Linux'

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/flask_app.exe
          asset_name: flask_app_windows.exe
          asset_content_type: application/octet-stream
        if: runner.os == 'Windows'
